10/27/2020
--------------------------------------------------------------------------------------------------------
ORM: Object Relational Mapper
	In DBs, data stored in tables, in rows and columns
	ORMS used to convert Db data into something c# would understand
	ORMS maps data from DB to an object in profram
	we will be using Entity Framework Core

EF Core
	ORM for .NEt Core
	2 ways to connecto your db to code:
		DB first
			db structure already exists, classes are created based on the existing structure
		Code first
			create DB structure based on the classes in the code

Artifacts we'll be working with
	DBContext
		a dbCOntext instance reporesnts a asession with the database and can be used to query and sace instances of entities
		need to make our own implementation specific to our application
	Connection String
		used to connect to your db
		contains information about database youll be connecting to
	Startup project
		the one that the tools build and run
		(HerosUI)
	Project
		also known as target project beacuse it's wheret he commands add or remove files
		(HerosDB)

Code First EF Core
	1. Create Entities/Models
		make sure to use naming conventino to ease migration progress
	2. Create implementaion of the DBContext
	3. Run :
		dotnet ef migrations add <name of migration> -c <implemented db-context> --startup-project <location of startup project>
	4. Run dotnet ef database update --startup-project <location of startup project>
	5. Repeat steps 3-4 for any chagnes to your db

Migration
	basically a snapshot of the databse schema given the current state of your models
	changes made to the schema based on teh changes made in your models

DB first EF Core
	1. hava a dta access library project separate from the startup application project
		with a project refence from the latter to the former
	2. Install Mivrosoft Entity Framework Core Design and PostgreSQL to both projects
	3. Run :
		Dotnet ef dbcontect scafforld -c <connection-string-in-quotes>
		-providerNpgsql.EntityFrameowrkCore.PostgreSQL
		--startup-project <path to project folder>
		--force
		--output-dir Entities
	4. Delete the DBContect.ONConfiguring method from scaffolded code
	5. any time you change the structure of the tables, go to step 3

--------------------------------------------------------------------------------------------------------

Databases:
	organized collection of structured information
	controlled by database management system (DBMS)

Relational Databaases
	type of database that stores and provides access to data points that are related to one another
	based on teh relational model, an intuitive, straightforward way of representing data in tables
	stores data into relations (tables)

SQL
	structured query language
	a programming language used by nearly all relational databases to query, manipulate, and define data and to provide access control
	use to provide structure to your database
	declared
		say what we want, not hwo to implement how to get what we want

Architecture
	Query processing:
		includes translations on high level queries into low level expressions that can be used at physical level of a file system
	DBMS Engine
		the core part of a DBMS that provides access to the data in a database managed by the DBMS

--------------------------------------------------------------------------------------------------------

SQL	Sublanguage vs Dialect
		sublanguage: refer to the different catagories of the statements/commands in sql
			for postgre: DDL, DML, DCL, TCL
		dialect: refers to the SQL variant used by a database vendor
			PGSQL, SQL Server, SQLLite

DDL: Data Definition Language
	used for creating database tables, defining the database structure
	commands:
		Create
		Alter
		Drop

DML: Data Manipulation Language
	all operations on individual rows
	commands:
		Select
		Insert
		Update
		Delete

DCL: Data Control Language
	for DB admin, allow users ot have different permissions
	commands:
		Grant
		Revoke

TCL: Transaction Control Langauge
Concerned with griuping SQL commands and executing them as a batch
	commands:
		Commit
		Savepoint
		Rollback
		Transact

--------------------------------------------------------------------------------------------------------

database design
Constraints:
	columns can have constraints
	used for setting guidelines in what data belongs to a column
	types:
		data type
		not null
		unique
		check
		exclusion
		primary key (unique and not null)
		foreign key

Keys
	used to identify a data set and to esablish relationships between entities
	candidate key
		minimal set of columns in  a table that every other column depends on
		the values of any candidate key can uniquely identify a row
		column that can potentially be used as a primary key
	primary ke/y
		unique identifier for a row
		in implementaion, we choose one candidate key to identify the row
	foreign key
		a set of columns which hold hte values of some primary key to establish a relationship to another row
	composite key
		any key thats more than one column

Referential Integrity
	refers to the accuracy and consistency of data within a relationship
	whenever a foreign key value is used, it must reference a valid, existing primary key

Relationships in SQL
	defined by multiplicity:
		1:1
			two sets of data are unique to each other
		1:m
			one set of data can have many instances of the other data set
		m:m
			both data sets can have many instances of each other

Implementing SQL relationships
	1:1
		put both entities in hte same table or separate the entities in two tables with a FK refence that is unique and not null
	1:m
		two tables, FK that is not unique
	m:m
		3 tables, one of which is a join/junction table

ER Diagram
	shows relationship of entity sets stored in database
	visual represntation of DB design

Why separate out data
	cant insert some data wihtout also having some other data
	forced to delete some data in order to delte some other data
	redundancy can mean accidental inconsistency when updating

Normalization
	designing a database in a certain way to ease data management
	Normal forms:
		1NF
			atomic values
			no repreating groups of columns
			no duplicate rows
		2NF
			has to be 1NF
			no partial dependencies
			no composite keys mean youre 2NF by default
		3NF
			has to be 2NF
			no transitive dependencies

 Normalization in a nutshell
 	the data in the table should depend on the key (1NF), the whole key (2NF), and nothing but the key (3NF)